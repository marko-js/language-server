<let/list=[{
  value: 1
}, {
  value: 2
}, {
  value: 3
}] as const/>

<for of=list>
  Repeated!
</for>

<for|item, index, all| of=list>
  ${item} ${index} ${all}
//  ^?      ^?       ^?
</for>

<for|item| of=list>
  <const/{ value: hoistedFromForOf } = item/>
</for>

<for|item| of=list></for>

<effect() {
  hoistedFromForOf;
//^?
}/>

<let/record={ a: 1, b: 2 } as const/>

<for|key, value| in=record>
  ${key} ${value}
//  ^?     ^?
</for>

<for|key| in=record>
  <const/hoistedFromForIn = key/>
</for>

<effect() {
  hoistedFromForIn;
//^?
}/>

<for|index| to=10>
  ${index}
//  ^?
</for>

<for|index| from=1 to=10>
  ${index}
//  ^?
</for>

<for|index| to=10 step=2>
  ${index}
//  ^?
</for>

<for|index| to=10>
  <const/hoistedFromForTo = index/>
</for>

<effect() {
  hoistedFromForTo;
//^?
}/>

<for|index|>
  Should error
</for>
